name: Build and Publish to Docker Hub
on:
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
          registry-url: "https://npm.pkg.github.com/"
          scope: "@apimap"
          always-auth: true
      - run: |
          echo "@apimap:registry = https://npm.pkg.github.com/apimap" > .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> .npmrc
          echo "//npm.pkg.github.com/:always-auth=true" >> .npmrc
      - name: Build and Release
      - run: |
          npm install
          npm run build
          npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MULTI_PACKAGES_TOKEN: ${{ secrets.MULTI_PACKAGES_TOKEN }}
          MULTI_PACKAGES_USER: ${{ secrets.MULTI_PACKAGES_USER }}
      - name: Read release tag
        id: read_tag
        run: echo "::set-output name=release_tag::$(git tag --points-at HEAD 'v[0-9]*' | head -n1)"
      - name: Set artifact version
        if: ${{ steps.read_tag.outputs.release_tag != '' }}
        run: grep -rl '0.0.0-semantically-released' dist/ | xargs sed -i 's/0.0.0-semantically-released/${{ steps.buildx.outputs.name }}/'
      - name: Login to Docker Hub
        if: ${{ steps.read_tag.outputs.release_tag != '' }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Set up Docker Buildx
        if: ${{ steps.read_tag.outputs.release_tag != '' }}
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and Push
        if: ${{ steps.read_tag.outputs.release_tag != '' }}
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: apimap/portal:latest,apimap/portal:${{ steps.read_tag.outputs.release_tag }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache